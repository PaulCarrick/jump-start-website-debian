#!/bin/bash

# postinst script for Jump Start Server

set -e  # Exit on error

status=0

. /usr/share/debconf/confmodule

db_get jump-start-server/db-name
DB_NAME="$RET"

db_get jump-start-server/db-user
DB_USERNAME="$RET"

db_get jump-start-server/db-password
export DB_PASSWORD="$RET"

if [ -z "${DB_NAME}" ]; then
  echo "Please enter a database name." >&2
  ((status+=1))
fi

if [ -z "${DB_USERNAME}" ]; then
  echo "Please enter a username for the database user." >&2
  ((status+=2))
fi

if [ -z "${DB_PASSWORD}" ]; then
  echo "Please enter a password for the database user." >&2
  ((status+=3))
fi

if [ "${status}" -ne 0 ]; then
  exit "${status}"
fi

install_directory="/opt/jump-start-website"

if [ ! -d "${install_directory}" ]; then
  echo "Error: directory ${install_directory} doesn't exist. Exiting..." >&2
  exit 7
fi

cd "${install_directory}/" || { echo "Failed to change directory ${install_directory}." >&2; exit 8; }

# Run Ruby Setup Script
ruby bin/setup.rb "$DB_NAME" "$DB_USERNAME"

# Install Bundler
echo "Installing Bundler..."
if ! gem install bundler -v '~> 2.5'; then
  echo "Failed to install Bundler." >&2
  exit 9
fi
echo "Bundler installed."

# Install Gems
echo "Installing gems with Bundler..."
if ! bundle install; then
  echo "Failed to install gems." >&2
  exit 10
fi
echo "Gems installed."

# Run Database Migrations
echo "Running database migrations..."
if ! bundle exec rails db:migrate; then
  echo "Failed to migrate the database." >&2
  exit 11
fi
echo "Database migrations completed."

# Precompile Assets (for Production)
if [ "${RAILS_ENV}" = "production" ]; then
    echo "Precompiling assets for production..."
    if ! bundle exec rails assets:precompile; then
      echo "Failed to precompile assets." >&2
      exit 12
    fi
    echo "Assets precompiled."
fi

echo "Jump Start Server configured successfully."
exit 0
